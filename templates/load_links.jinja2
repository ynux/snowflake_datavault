FIRST_HUB,SECOND_HUB,FIRST_HUB_BKEYS,SECOND_HUB_BKEYS

{%- for row in rows %}
{%- set LinkHashKey = row['LINK_NAME'][4:] + "_HSH" %}
{%- set HubHashKey1 = row['FIRST_HUB'][4:] + "_HSH" %}
{%- set HubHashKey2 = row['SECOND_HUB'][4:] + "_HSH" %}
{%- set EtlInsertRunId = -1 %}
{%- set MD5SandedBKeys = "MD5(" + row['FIRST_HUB_BKEYS'] + " || '^' || " + row['SECOND_HUB_BKEYS'] + ")" %}
{# For real use, have standard format of dates and times #}


INSERT INTO {{ row['LINK_SCHEMA_NAME'] }}.{{ row['LINK_NAME'] }}
    (   {{ LinkHashKey }},
        {{ HubHashKey1 }},
        {{ HubHashKey2 }},
        {{ row['FIRST_HUB_BKEYS'] }},
        {{ row['SECOND_HUB_BKEYS'] }},
        LOAD_DATETIME,
        RECORD_SOURCE,
        ETL_INSERT_RUN_ID
    )
SELECT  s.{{ LinkHashKey }},
        s.{{ HubHashKey1 }},
        s.{{ HubHashKey2 }},
        s.{{ row['FIRST_HUB_BKEYS'] }},
        s.{{ row['SECOND_HUB_BKEYS'] }},
        s.LOAD_DATETIME,
        s.RECORD_SOURCE,
        '-1'
FROM (
        SELECT  
                {{ MD5SandedBKeys }} AS {{ LinkHashKey }},
                first_hub.{{ HubHashKey1 }} AS {{ HubHashKey1 }},
                second_hub.{{ HubHashKey2 }} AS {{ HubHashKey2 }},
                first_hub.{{ row['FIRST_HUB_BKEYS'] }} AS {{ row['FIRST_HUB_BKEYS'] }},
                second_hub.{{ row['SECOND_HUB_BKEYS'] }} AS {{ row['SECOND_HUB_BKEYS'] }},
                CURRENT_DATE() AS LOAD_DATETIME,
                '{{ row['SECOND_HUB'] }}' AS RECORD_SOURCE
        FROM {{ row['LINK_SCHEMA_NAME'] }}.{{ row['FIRST_HUB'] }} first_hub,
             {{ row['LINK_SCHEMA_NAME'] }}.{{ row['SECOND_HUB'] }} second_hub
        GROUP BY {{ MD5SandedBKeys }},
                first_hub.{{ HubHashKey1 }},
                second_hub.{{ HubHashKey2 }},
                first_hub.{{ row['FIRST_HUB_BKEYS'] }},
                second_hub.{{ row['SECOND_HUB_BKEYS'] }},
                '{{ row['SECOND_HUB'] }}'
     ) s
LEFT OUTER JOIN {{ row['LINK_SCHEMA_NAME'] }}.{{ row['LINK_NAME'] }} t
    ON s.{{ HubHashKey1 }} = t.{{ HubHashKey1 }}
    AND s.{{ HubHashKey2 }} = t.{{ HubHashKey2 }}
WHERE t.{{ LinkHashKey }} IS NULL;
{%- endfor %}
